
### Build code inside docker environments, separate build and final


## https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
## https://docs.docker.com/develop/develop-images/multistage-build/

### Name what we are building:
ARG DOCKER_END=@@DOCKER_END@@

### Base both build and final from this base

###################### BUILD #############################
# Allow shared dev-env cache
FROM @@DOCKER_BASE@@ AS dev_env
RUN @@ADD_PACKAGE@@ @@DEV_PACKAGES@@
LABEL STAGE=dev_env

# Allow shared build-env in cache
FROM dev_env as build_env
RUN @@ADD_PACKAGE@@ @@BUILD_PACKAGES@@
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=build_env

# Get source for compile
FROM build_env AS bootstrap
WORKDIR /origin
COPY . .
RUN ./bootstrap
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=src

# Execute configure for compile
FROM bootstrap as configure
RUN ./configure --prefix @@PREFIX_DIR@@
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=configure

# Execute compile
FROM configure as make
RUN nproc | xargs -I % make -j%
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=make

# Install
FROM make as install
RUN make install
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=install

#######################################################################
FROM @@DOCKER_BASE@@ AS staging
WORKDIR @@PREFIX_DIR@@
COPY --from=install @@PREFIX_DIR@@ @@PREFIX_DIR@@
ENTRYPOINT ["/bin/sh"]
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=staging


#######################################################################
FROM staging AS final
RUN @@ADD_PACKAGE@@ @@RUNTIME_PACKAGES@@ 
ENTRYPOINT ["/bin/sh"]
LABEL DOCKER_END=@@DOCKER_END@@ STAGE=final

